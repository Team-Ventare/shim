generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  PENDING
}

enum PR_Status {
  PENDING
  APPROVED
  REJECTED
}

enum Status {
  AVAILABLE
  CHECKED_OUT
}

enum Type {
  PATIENT_SIMULATORS
  TASK_TRAINERS
  SIMULATION_EQUIPMENT
  MEDICAL_FURNITURE
  CONSMABLE_SUPPLIES
  NONCONSUMABLE_SUPPLIES
  COMPUTERS
  OFFICE_SUPPLIES
  OTHER
}

model User {
  id               String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  email            String            @unique
  password         String
  name             String
  role             Role              @default(PENDING)
  purchaseRequests PurchaseRequest[]
  cartId           String?           @db.Uuid
}

model Inventory {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  amount     Int
  location   String
  type       Type
  status     Status   @default(AVAILABLE)
  checkedOut String[]
  Cart       Cart?    @relation(fields: [cartId], references: [id])
  cartId     String?  @db.Uuid
}

model PurchaseRequest {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String    @db.Uuid
  name      String
  category  Type
  price     Int
  status    PR_Status @default(PENDING)
  user      User      @relation(fields: [userId], references: [id])
}

model Suppliers {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  address   String
  phone     String
  email     String
  website   String
  notes     String
}

model Cart {
  id        String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  inventory Inventory[]
}
